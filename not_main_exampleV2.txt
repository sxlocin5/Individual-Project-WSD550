# Import necessary modules
from machine import Pin 
import bluetooth
from ble_simple_peripheral import BLESimplePeripheral

# Create a Bluetooth Low Energy (BLE) object
ble = bluetooth.BLE()

# Create an instance of the BLESimplePeripheral class with the BLE object
sp = BLESimplePeripheral(ble)

# Create a Pin object for the onboard LED, configure it as an output
led = Pin("LED", Pin.OUT)

# Initialize the LED state to 0 (off)
led_state = 0

def flash_led():
    for _ in range(5):
        global led_state
        led.value(1)		#Turn the LED on
        utime.sleep(0.2)	#Delay for 0.2 seconds
        led.value(0)		#Turn the LED off
        utime.sleep(0.2)	#Delay for 0.2 seconds

# Define a callback function to handle received data
def on_rx(data):
    print("Data received: ", data)  # Print the received data
    global led_state  # Access the global variable led_state
    if data == b'toggle_on\x00':  # Check if the received data is "toggle_on"
        if led_state == 1:
            msg = b'The LED is already on\x00'
            sp.send(msg)
        if led_state == 0:
            led_state = 1
            led.value(led_state)	# Toggle the LED state on
            msg = b'LED on\x00'
            sp.send(msg)
   
    if data == b'toggle_off\x00':  # Check if the received data is "toggle_off"
        if led_state == 0:
            msg = b'The LED is already off\x00'
            sp.send(msg)
        if led_state == 1:
            led_state = 0
            led.value(led_state)	# Toggle the LED state off
            msg = b'LED off\x00'
            sp.send(msg)

    if data == b'flash_LED\x00':  # Check if the received data is "Flash LED"
        msg = b'Flashing LED\x00'
        sp.send(msg)		
        flash_led()					#flashes LED
        led_state = 0
        led.value(led_state)
        msg = b'LED off\x00'
        sp.send(msg)
        
# Start an infinite loop
while True:
    if sp.is_connected():  # Check if a BLE connection is established
        sp.on_write(on_rx)  # Set the callback function for data reception